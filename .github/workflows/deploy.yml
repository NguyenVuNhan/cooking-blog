name: Nx Affected CI

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Packages
        run: yarn install

      - name: Run Affected Test
        shell: bash
        run: yarn run affected:test --base=remotes/origin/master

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Packages
        run: yarn install

      - name: Build project
        run: yarn nx run-many --target=build --projects=api,blog --parallel --configuration=production

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          source: 'dist,docker-compose.prod.yml,Dockerfile.prod,nginx'
          target: ${{ secrets.WORK_DIR }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            docker-compose -f docker-compose.prod.yml build
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
